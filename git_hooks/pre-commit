#!/bin/bash

# Check for .ipynb files with output cells;
# ask the user if they really want to commit them
ipynb_files=`git diff --staged --name-only | awk "/.ipynb/"`
have_output=""

if [ -n "$ipynb_files" ]; then
  while read filename; do
    if [ $(git show :$filename | grep -cm1 "\"output_type\":") -ge 1 ]; then
      have_output="${have_output}"$'\n'"$filename"
    fi
  done <<< $ipynb_files
  # use here string to run in main shell: https://stackoverflow.com/a/16854326
fi

if [ -n "$have_output" ]; then
  # https://stackoverflow.com/a/10015707
  exec < /dev/tty # allows us to grab user input

  echo "You appear to be committing Jupyter notebooks"
  echo "that contain output:"
  echo "$have_output"$'\n'
  while true; do
          read -p "Do you want to clean the notebook first (y/n) or abort (a) ?: " resp
    case $resp in
      [Yy]* ) exit_status=1; git reset $have_output;jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace $have_output; git add $have_output; break;;
      [Nn]* ) exit_status=0; break;;
      [Aa]* ) exit_status=1; break;;
          * ) echo "Please answer y or n";;
    esac
  done

  exit $exit_status
fi


# This is a pre-commit hook that ensures attempts to commit files that are
# are larger than $limit to your _local_ repo fail, with a helpful error message.

# You can override the default limit of 5MB by supplying the environment variable:
# GIT_FILE_SIZE_LIMIT=42000000 git commit -m "This commit is allowed file sizes up to 42MB"

# Maximum file size limit in bytes
limit=${GIT_FILE_SIZE_LIMIT:-5000000} # Default 5MB
limitInMB=$(( $limit / 10**6 ))

# Move to the repo root so git files paths make sense
repo_root=$( git rev-parse --show-toplevel )
cd $repo_root

empty_tree=$( git hash-object -t tree /dev/null )

if git rev-parse --verify HEAD > /dev/null 2>&1
then
	against=HEAD
else
	against="$empty_tree"
fi

# Set split so that for loop below can handle spaces in file names by splitting on line breaks
IFS='
'

echo "Checking staged file sizes"
shouldFail=false
for file in $( git diff-index --cached --name-only $against ); do
	file_size=$( ls -la $file | awk '{ print $5 }')
	if [ "$file_size" -gt  "$limit" ]; then
	    echo File $file is $(( $file_size / 10**6 )) MB, which is larger than our configured limit of $limitInMB MB
        shouldFail=true
	fi
done

if $shouldFail
then
    echo If you really need to commit this file, you can override the size limit by setting the GIT_FILE_SIZE_LIMIT environment variable, e.g. GIT_FILE_SIZE_LIMIT=42000000 for 42MB. Or, commit with the --no-verify switch to skip the check entirely, you naughty boy!
	  echo Commit aborted
    exit 1;
fi

